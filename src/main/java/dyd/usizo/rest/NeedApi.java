package dyd.usizo.rest;

import dyd.usizo.accessingdatamysql.NeedRepository;
import dyd.usizo.accessingdatamysql.ProductRepository;
import dyd.usizo.models.Need;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
public class NeedApi {

    @Autowired // This means to get the bean called needRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private NeedRepository needRepository;
    private ProductRepository productRepository;

    @GetMapping("/api/need")
    public Need getNeed(@RequestParam(value = "action", defaultValue = "find") String action, @RequestParam(value = "id", defaultValue = "1") int id) {
        if(action.equals("find"))return needRepository.findById(id).get();
        else {
            needRepository.delete(needRepository.findById(id).get());
            return null;
        }
    }

    @PostMapping("/api/need")
    public Need addNeed(@RequestParam(value = "id", required = false, defaultValue = "-1") int id,
                        @RequestParam(value = "productId", required = true, defaultValue = "") int productId,
                        @RequestParam(value = "qte", required = true, defaultValue = "1") int qte) {
        if(id == -1){
            return  needRepository.save(new Need(productRepository.findById(productId).get(),qte));
        } else if (needRepository.existsById(id)){
            Need n = needRepository.findById(id).get();
            n.setProduct(productRepository.findById(productId).get());
            n.setQuantity(qte);
            return  needRepository.save(n);
        }
        return null;
    }

    @GetMapping("/api/needs")
    public List<Need> getNeeds(){
        return (List<Need>)needRepository.findAll();
    }
}